node:
  cluster: {{ name }}
  id: {{ name }}
stats_config:
  stats_tags:
  - tag_name: "local_cluster"
    fixed_value: "{{ name }}"
admin:
  access_log_path: /dev/stdout
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 9902
static_resources:
  clusters:
      - name: spire_sds_cluster
        connect_timeout: 0.25s
        http2_protocol_options: {}
        load_assignment:
          cluster_name: spire_sds_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  pipe:
                    path: /run/spire/sockets/agent.sock
{% for kafkaClusterName, kafkaClusterConf in kafkaClusters.items() %}
      - name: kafka_{{ kafkaClusterName }}_bootstrap
        connect_timeout: 5s
        transport_socket:
          name: "envoy.transport_sockets.tls"
          typed_config:
            "@type": type.googleapis.com/envoy.api.v2.auth.UpstreamTlsContext
            common_tls_context:
              tls_params:
                tls_minimum_protocol_version: TLSv1_2
              tls_certificate_sds_secret_configs:
              - name: "spiffe://{{ trustDomain }}/{{ name }}"
                sds_config:
                  api_config_source:
                    api_type: GRPC
                    grpc_services:
                      envoy_grpc:
                        cluster_name: spire_sds_cluster
              combined_validation_context:
                default_validation_context:
                  match_subject_alt_names:
                  - exact: "spiffe://{{ trustDomain }}/{{ kafkaClusterName }}"
                validation_context_sds_secret_config:
                  name: "spiffe://{{ trustDomain }}"
                  sds_config:
                    api_config_source:
                      api_type: GRPC
                      grpc_services:
                        envoy_grpc:
                          cluster_name: spire_sds_cluster
        type: "STRICT_DNS"
        load_assignment:
          cluster_name: kafka_{{ kafkaClusterName }}_bootstrap
          endpoints:
          - lb_endpoints:
{% for brokerName, brokerConf in kafkaClusterConf.brokers.items() %}
            - endpoint:
                address:
                  socket_address:
                    address: {{ brokerConf.brokerAddress }}
                    port_value: {{ brokerConf.brokerPort }}
{% endfor %}
        lb_policy: ROUND_ROBIN
        upstream_connection_options:
          tcp_keepalive:
            keepalive_probes: 4
            keepalive_time: 30
            keepalive_interval: 30
{% for brokerName, brokerConf in kafkaClusterConf.brokers.items() %}
      - name: kafka_{{ kafkaClusterName }}_{{ brokerName }}
        connect_timeout: 5s
        transport_socket:
          name: "envoy.transport_sockets.tls"
          typed_config:
            "@type": type.googleapis.com/envoy.api.v2.auth.UpstreamTlsContext
            common_tls_context:
              tls_params:
                tls_minimum_protocol_version: TLSv1_2
              tls_certificate_sds_secret_configs:
              - name: "spiffe://{{ trustDomain }}/{{ name }}"
                sds_config:
                  api_config_source:
                    api_type: GRPC
                    grpc_services:
                      envoy_grpc:
                        cluster_name: spire_sds_cluster
              combined_validation_context:
                default_validation_context:
                  match_subject_alt_names:
                  - exact: "spiffe://{{ trustDomain }}/{{ kafkaClusterName }}"
                validation_context_sds_secret_config:
                  name: "spiffe://{{ trustDomain }}"
                  sds_config:
                    api_config_source:
                      api_type: GRPC
                      grpc_services:
                        envoy_grpc:
                          cluster_name: spire_sds_cluster
        type: "STRICT_DNS"
        load_assignment:
          cluster_name: kafka_{{ kafkaClusterName }}_{{ brokerName }}
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ brokerConf.brokerAddress }}
                    port_value: {{ brokerConf.brokerPort }}
        lb_policy: RANDOM
        upstream_connection_options:
          tcp_keepalive:
            keepalive_probes: 4
            keepalive_time: 30
            keepalive_interval: 30
{% endfor %}
{% endfor %}
  listeners:
{% for kafkaClusterName, kafkaClusterConf in kafkaClusters.items() %}
      - address:
          socket_address:
            address: 127.0.0.1
            port_value: {{ kafkaClusterConf.bootstrapPort }}
        name: egress_kafka_{{ kafkaClusterName }}_bootstrap
        drain_type: modify_only
        filter_chains:
        - filters:
          - name: envoy.filters.network.kafka_broker
            typed_config:
              "@type": type.googleapis.com/envoy.config.filter.network.kafka_broker.v2alpha1.KafkaBroker
              stat_prefix: kafka_k_{{ kafkaClusterName }}_bootstrap
          - name: envoy.tcp_proxy
            typed_config:
              "@type": type.googleapis.com/envoy.config.filter.network.tcp_proxy.v2.TcpProxy
              stat_prefix: kafka_t_{{ kafkaClusterName }}_bootstrap
              cluster: kafka_{{ kafkaClusterName }}_bootstrap
              access_log:
              - name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog
                  path: /dev/stdout
                  json_format:
                    service_timestamp: "%START_TIME%"
                    log_type: "KAFKA_TCP"
                    response_flags: "%RESPONSE_FLAGS%"
                    bytes_received: "%BYTES_RECEIVED%"
                    bytes_sent: "%BYTES_SENT%"
                    duration_ms: "%DURATION%"
                    upstream_cluster: "%UPSTREAM_CLUSTER%"
                    upstream_host: "%UPSTREAM_HOST%"
                    upstream_transport_failure_reason: "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
{% for brokerName, brokerConf in kafkaClusterConf.brokers.items() %}
      - address:
          socket_address:
            address: 127.0.0.1
            port_value: {{ brokerConf.listenPort }}
        name: egress_kafka_{{ kafkaClusterName }}_{{ brokerName }}
        drain_type: modify_only
        filter_chains:
        - filters:
          - name: envoy.filters.network.kafka_broker
            typed_config:
              "@type": type.googleapis.com/envoy.config.filter.network.kafka_broker.v2alpha1.KafkaBroker
              stat_prefix: kafka_k_{{ kafkaClusterName }}_{{ brokerName }}
          - name: envoy.tcp_proxy
            typed_config:
              "@type": type.googleapis.com/envoy.config.filter.network.tcp_proxy.v2.TcpProxy
              stat_prefix: kafka_t_{{ kafkaClusterName }}_{{ brokerName }}
              cluster: kafka_{{ kafkaClusterName }}_{{ brokerName }}
              access_log:
              - name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog
                  path: /dev/stdout
                  json_format:
                    service_timestamp: "%START_TIME%"
                    log_type: "KAFKA_TCP"
                    response_flags: "%RESPONSE_FLAGS%"
                    bytes_received: "%BYTES_RECEIVED%"
                    bytes_sent: "%BYTES_SENT%"
                    duration_ms: "%DURATION%"
                    upstream_cluster: "%UPSTREAM_CLUSTER%"
                    upstream_host: "%UPSTREAM_HOST%"
                    upstream_transport_failure_reason: "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
{% endfor %}
{% endfor %}
